{"version":3,"sources":["core/StyledApp.ts","components/calc-display/StyledDisplay.ts","components/calc-display/Display.tsx","components/calc-buttons/StyledCalcButtons.ts","components/button/StyledButton.ts","components/button/Button.tsx","core/styles.ts","components/calc-buttons/CalcButtons.tsx","App.tsx","index.tsx"],"names":["StyledAppWrapper","styled","div","StyledCalcWrapper","StyledDisplay","StyledCurrentValue","StyledExpression","Display","expression","currentValue","StyledCalcButtons","StyledButton","button","Button","props","tabIndex","children","largeButton","width","lowFuncButton","color","CalcButtons","setCurrent","setExpression","setOperand","setPreviousValue","setNext","nextValue","previousValue","currentOperand","onNumberClick","e","target","innerText","length","concat","onCalcAction","result","parseFloat","toString","style","onClick","slice","search","App","useState","setCurrentValue","currentExpression","setCurrentExpression","setCurrentOperand","setNextValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc912d7f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledAppWrapper = styled.div`\r\n  min-width: 1000px;\r\n  min-height: 700px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: #FCEEEA;\r\n`;\r\n\r\nexport const StyledCalcWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 320px;\r\n  height: 525px;\r\n  background: #394273;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  height: 125px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  text-align: right;\r\n`;\r\n\r\nexport const StyledCurrentValue = styled.div`\r\n  height: 75px;\r\n  font-size: 30px;\r\n  padding-top: 40px;\r\n  padding-right: 5px;\r\n`;\r\n\r\nexport const StyledExpression = styled.div`\r\n  height: 50px;\r\n  padding-right: 5px;\r\n`;","import React from 'react';\r\nimport { StyledCurrentValue, StyledDisplay, StyledExpression } from './StyledDisplay';\r\n\r\ninterface IDisplay {\r\n  expression: string;\r\n  currentValue: string;\r\n}\r\n\r\nconst Display:React.FC<IDisplay> = ({expression, currentValue}) => {\r\n  return (\r\n    <StyledDisplay>\r\n      <StyledExpression>{expression}</StyledExpression>\r\n      <StyledCurrentValue>{currentValue}</StyledCurrentValue>\r\n    </StyledDisplay>\r\n  );\r\n};\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledCalcButtons = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  background: #F25757;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  font-size: 18px;\r\n  \r\n  color: #FCEEEA;\r\n  border: 1px solid #F29B94;\r\n  \r\n  &:focus {\r\n    background: #E33D3D;\r\n    border: 1px solid #F29B94;\r\n  }\r\n  &:active {\r\n    background: #E33D3D;\r\n    border: 1px solid #F29B94;\r\n  }\r\n`;","import React from 'react';\r\nimport { StyledButton } from './StyledButton';\r\n\r\ninterface IButton {\r\n  style?: any;\r\n  onClick?: (e: any) => void;\r\n}\r\n\r\nconst Button: React.FC<IButton> = (props) => {\r\n  return (\r\n    <StyledButton {...props} tabIndex={-1}>{props.children}</StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;","export const largeButton = {\r\n  width: '160px'\r\n}\r\n\r\nexport const lowFuncButton = {\r\n  color: '#F29B94'\r\n}\r\n\r\nexport const equalButton = {\r\n  background: '#E33D3D'\r\n}","import React from 'react';\r\nimport { StyledCalcButtons } from './StyledCalcButtons';\r\nimport Button from '../button/Button';\r\nimport { largeButton, lowFuncButton } from '../../core/styles';\r\n\r\ninterface ICalc {\r\n  setCurrent: any;\r\n  setExpression: any;\r\n  setOperand: any;\r\n  setPreviousValue: any;\r\n  setNext: any;\r\n  currentOperand: string;\r\n  currentValue: string;\r\n  nextValue: boolean;\r\n  previousValue: string;\r\n}\r\n\r\nconst CalcButtons: React.FC<ICalc> = ({\r\n  setCurrent,\r\n  setExpression,\r\n  setOperand,\r\n  setPreviousValue,\r\n  setNext,\r\n  nextValue,\r\n  previousValue,\r\n  currentOperand,\r\n  currentValue}) => {\r\n\r\n  const onNumberClick = (e: any) => {\r\n    if (currentOperand !== '' && nextValue) {\r\n      setCurrent(e.target.innerText);\r\n      setNext('');\r\n    } else if (currentValue === '0') {\r\n      setCurrent(e.target.innerText);\r\n    } else {\r\n      currentValue.length < 11 && currentValue[0] === '-' && setCurrent(currentValue.concat(e.target.innerText));\r\n      currentValue.length < 10 && currentValue[0] !== '-' && setCurrent(currentValue.concat(e.target.innerText));\r\n    }\r\n  };\r\n\r\n  const onClear = () => {\r\n    setCurrent('0');\r\n    setExpression('0');\r\n    setOperand('');\r\n    setPreviousValue('');\r\n    setNext(false);\r\n  };\r\n\r\n  const onPlusMinus = () => {\r\n    currentValue[0] === '-' && currentValue !== '0' && setCurrent(currentValue.slice(1));\r\n    currentValue[0] !== '-' && currentValue !== '0' && setCurrent('-'.concat(currentValue));\r\n  }\r\n\r\n  const onPercent = () => setCurrent((parseFloat(currentValue)/100).toString());\r\n\r\n  const onPoint = () => {\r\n    const isPoint = currentValue.search(',');\r\n    isPoint === -1 && setCurrent(currentValue.concat(','));\r\n  };\r\n\r\n  const onEqual = () => {\r\n    setOperand('');\r\n    setPreviousValue('');\r\n    setExpression('0');\r\n    setNext(false);\r\n    switch (currentOperand) {\r\n      case '+' : {\r\n        const result = parseFloat(previousValue) + parseFloat(currentValue);\r\n        setCurrent(result.toString());\r\n      }\r\n        break;\r\n      case '-' : {\r\n        const result = parseFloat(previousValue) - parseFloat(currentValue);\r\n        setCurrent(result.toString());\r\n      }\r\n        break;\r\n      case '/' : {\r\n        const result = parseFloat(previousValue) / parseFloat(currentValue);\r\n        setCurrent(result.toString());\r\n      }\r\n        break;\r\n      case '*' : {\r\n        const result = parseFloat(previousValue) * parseFloat(currentValue);\r\n        setCurrent(result.toString());\r\n      }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onCalcAction = (e: any) => {\r\n    switch (e.target.innerText) {\r\n      case '+' :\r\n        if (currentOperand === '+') {\r\n          setOperand('+');\r\n          const result = parseFloat(previousValue) + parseFloat(currentValue);\r\n          setPreviousValue(result.toString());\r\n          setCurrent(result.toString());\r\n          setExpression(`${result.toString()} + `);\r\n          setNext(true);\r\n        } else {\r\n          setOperand('+');\r\n          setPreviousValue(currentValue);\r\n          setExpression(`${currentValue} + `);\r\n          setNext(true);\r\n        }\r\n        break;\r\n      case '-' :\r\n        if (currentOperand === '-') {\r\n          setOperand('-');\r\n          const result = parseFloat(previousValue) - parseFloat(currentValue);\r\n          setPreviousValue(result.toString());\r\n          setCurrent(result.toString());\r\n          setExpression(`${result.toString()} - `);\r\n          setNext(true);\r\n        } else {\r\n          setOperand('-');\r\n          setPreviousValue(currentValue);\r\n          setExpression(`${currentValue} - `);\r\n          setNext(true);\r\n        }\r\n        break;\r\n      case '/' :\r\n        if (currentOperand === '/') {\r\n          setOperand('/');\r\n          const result = parseFloat(previousValue)/parseFloat(currentValue);\r\n          setPreviousValue(result.toString());\r\n          setCurrent(result.toString());\r\n          setExpression(`${result.toString()} / `);\r\n          setNext(true);\r\n        } else {\r\n          setOperand('/');\r\n          setPreviousValue(currentValue);\r\n          setExpression(`${currentValue} / `);\r\n          setNext(true);\r\n        }\r\n        break;\r\n      case '*' :\r\n        if (currentOperand === '*') {\r\n          setOperand('*');\r\n          const result = parseFloat(previousValue) * parseFloat(currentValue);\r\n          setPreviousValue(result.toString());\r\n          setCurrent(result.toString());\r\n          setExpression(`${result.toString()} * `);\r\n          setNext(true);\r\n        } else {\r\n          setOperand('*');\r\n          setPreviousValue(currentValue);\r\n          setExpression(`${currentValue} * `);\r\n          setNext(true);\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCalcButtons>\r\n      <Button style={lowFuncButton} onClick={onClear}>C</Button>\r\n      <Button style={lowFuncButton} onClick={onPlusMinus}>+/-</Button>\r\n      <Button style={lowFuncButton} onClick={onPercent}>%</Button>\r\n      <Button onClick={onCalcAction}>/</Button>\r\n      <Button onClick={onNumberClick}>7</Button>\r\n      <Button onClick={onNumberClick}>8</Button>\r\n      <Button onClick={onNumberClick}>9</Button>\r\n      <Button onClick={onCalcAction}>*</Button>\r\n      <Button onClick={onNumberClick}>4</Button>\r\n      <Button onClick={onNumberClick}>5</Button>\r\n      <Button onClick={onNumberClick}>6</Button>\r\n      <Button onClick={onCalcAction}>-</Button>\r\n      <Button onClick={onNumberClick}>1</Button>\r\n      <Button onClick={onNumberClick}>2</Button>\r\n      <Button onClick={onNumberClick}>3</Button>\r\n      <Button onClick={onCalcAction}>+</Button>\r\n      <Button style={largeButton} onClick={onNumberClick}>0</Button>\r\n      <Button onClick={onPoint}>.</Button>\r\n      <Button onClick={onEqual}>=</Button>\r\n    </StyledCalcButtons>\r\n  );\r\n};\r\n\r\nexport default CalcButtons;\r\n","import React, { useState } from 'react';\r\nimport { StyledAppWrapper, StyledCalcWrapper } from './core/StyledApp';\r\nimport Display from './components/calc-display/Display';\r\nimport CalcButtons from \"./components/calc-buttons/CalcButtons\";\r\n\r\nfunction App() {\r\n  const [currentValue, setCurrentValue] = useState('0');\r\n  const [currentExpression, setCurrentExpression] = useState('0');\r\n  const [previousValue, setPreviousValue] = useState('');\r\n  const [currentOperand, setCurrentOperand] = useState('');\r\n  const [nextValue, setNextValue] = useState(false);\r\n\r\n  return (\r\n    <StyledAppWrapper>\r\n      <StyledCalcWrapper>\r\n        <Display expression={currentExpression !== '0' ? currentExpression : ''} currentValue={currentValue}/>\r\n        <CalcButtons\r\n          setCurrent={setCurrentValue}\r\n          setExpression={setCurrentExpression}\r\n          setOperand={setCurrentOperand}\r\n          setPreviousValue={setPreviousValue}\r\n          setNext={setNextValue}\r\n          currentOperand={currentOperand}\r\n          currentValue={currentValue}\r\n          nextValue={nextValue}\r\n          previousValue={previousValue}\r\n        />\r\n      </StyledCalcWrapper>\r\n    </StyledAppWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}